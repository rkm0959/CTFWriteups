# you know what to do...
def CRT(a, m, b, n):
	(u, v) = solve_congruence((a, m), (b, n))
	return u, v

p = 168144747387516592781620466787069575171940752179672411574452734808497653671359884981272746489813635225263167370526619987842319278446075098036112998679570069486935297242638675590736039429506131690941660748942375274820626186241210376537247501823653926524570571499198040207829317830442983944747691656715907048411
q = 84072373693758296390810233393534787585970376089836205787226367404248826835679942490636373244906817612631583685263309993921159639223037549018056499339785034743467648621319337795368019714753065845470830374471187637410313093120605188268623750911826963262285285749599020103914658915221491972373845828357953524205
g = 2
h = 98640592922797107093071054876006959817165651265269454302952482363998333376245900760045606011965672215605936345612030149799453733708430421685495677502147392514542499678987737269487279698863617849581626352877756515435930907093553607392143564985566046429416461073375036461770604488387110385404233515192951025299

def crt(a, b):
	u, v = 0, 1
	for i in range(len(a)):
		u, v = CRT(u, v, a[i], b[i])
	return u

def get_DL(x, pr):
    gg = pow(x, (p-1) // pr, p)
    for i in range(0, pr):
        gt = pow(g, i * (p-1) // pr, p)
        if gt == gg:
            return i

def get_DLs(x):
    p_1 = get_DL(x, 3)
    p_2 = get_DL(x, 5)
    p_3 = get_DL(x, 19)
    return crt([p_1, p_2, p_3], [3, 5, 19])

cc = [-1]
for i in range(1, 255):
    cc.append(get_DLs(i))

xx = get_DLs(h)

res = []
fin = []
for x, y in res:
	s = ""
	u = get_DLs(x)
	v = get_DLs(y)
	res = (v - xx * u) % (3 * 5 * 19)
	for j in range(0, 255):
	    if cc[j] == res and 32 <= j and j < 128:
	        s += chr(j)
	print(s)

