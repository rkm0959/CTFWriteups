from Crypto.Cipher import AES, PKCS1_OAEP
from Crypto.PublicKey import RSA
from Crypto.Util.Padding import pad, unpad
from Crypto.Util.number import inverse, long_to_bytes, bytes_to_long, isPrime, getPrime
from tqdm import tqdm
from pwn import *
from sage.all import *
import sys, json, hashlib, os, math, time, base64, binascii, string, re
import random as rd # avoid confusion with sage
import multiprocessing as mp


data = """
YZE7xr0bE94JO4cqritQcE+dJ4WOmf4HvmhaSElywcp9xN8xBucN5DnxlXt8MEbj
me7udUNRvTDYHdFkv26P1K4Xhes8duRpQBES/TxN4YD42td2P8PCShLnvQ5JLWuY
cCnYQa9wbEH8zL9lxlJne5+0Vc1Bd7X7OENRTxBHpYJg28m/cDeUs8KHUvlyeGHK
qJGjzIAO3KXjvQzj0YWi/MGKCBleeoVz0URKR7oP7Gxj0RF2DypmLf8r2374uISy
RHLKFQfW9TnO/j8L7DWm55dOcJOZr1kbDvxPAu2zLQKCAQEAwM/Hdvm8rX6Q6C8A
tYLA/+JvWsxLxGW4nL88dgl61RVWPz4PZzWPNQwbfWohay562+ccTxFM0rlxuDoH
Dh7A4X45W0+MBJbdYTSoVzFs1r1bjoPpwBnsL1pNAkC5zloQFUkmvpzBD6DaLX0i
OhZtqsichyPGEyVH0RYv2L3UPYAhdmeYbsbc6Ruhva9tVUUMc+nFyKf51Os4vC8M
YTnyYZJqo/5oAR7wt6806ZlsTQowlbSPn1hYgtSka/RK+gBnKyFhmihi/Jy0gJNg
T/p/Fb1DaX6sjnTpPbxfHXX9j2ExC3uH1/1ynF1tpLBp2AN9/rbc2N2NtOI3W4oJ
X2krUQKCAQBRxpFTEWofHJZk7A6eaL7AkzQtJkWqRlyor7Yd1wOQdaiqDdO20AbW
Sbnbl8msiGGwPm25IUFqa214ULC87srWNBdw51/W0XaZiGzmjrctfHwZmVUQ31Ou
pDWve4ButBBIOt9sEnTq+pMiC93nPprG/E8uBLyF2KX/c8WIBa/WpE/mmC3lvgtb
PC2N9lrNeaHM4QPeRrfcj52qxxKYIo55XUGpMSGjEUaHiTqSZa5QJR26s5Q8OceV
sq5fUEDPbxHEhp0IUVVHarDBk2CC0iL+vQso82QQjm0ybJ1/posPNfDHlYHuqhSA
rVoRpE14r1M+FIXO0S05Qfl2RHV8BdfFAoIBAQCUFi7Lv3+dHMJj0h4HyL23rL6y
yZXE9EjMd1ExoDP91aJSnSbS9GS+/Ro4Osi+rw5ixryqBXRn9tMCDtJ1NQuY+MiU
XFEsltt9N4XAY0WNm/1aUGsuICBdYbKh3DD97M+FZqzUqlI1p1Fb3NpKhatfY7Yg
t2Z6w77B+OMi8T6rIpeLOLxR5pEJmCCfojM8gVRGMFb7IHc9Hp1XlJpePh1OyWQF
ywaauJBnYEsIz2A22cMp4frY/unZxeWRK82rN4d+jSYmyf9NCXwK9mXuq/pXjlaB
XqIB6+n3swDFGQX732iPBGu9iDbhsQ6vdoRBAtqcHmCTLB2dqXhrnvUSMMUS
""".replace("\n", '').replace(' ', '')

data_pub = """
MIICCgKCAgEAv6JGqJG+nS5TvPPZLXBSrgMy27wnMuSJdk4lSFc84m3vvRXx9ltE
R7UOQN2iL422Sp3kMYMvRIjflNvAzqfcgVuMwINdVO+1bbhedvFqeQKcMDfElA+W
DwULLIdwhZumyqoPjvRfdyfv8IcwPEBi/AthGKzfwaTlEiSnbNAM+nGGJt7KhEfo
kOuEQ2vStk6zuYHz/4sgUzsnTw9GTS277DzDZOmM7jQ/qY0RsLR/b8VeYNB9T2pN
ZPrV63FEoKYJzZCeRqbZuQoAtKhecsUf/gzMv3TgHO41ISGTHl9bFk3fa00rkDAA
f8N3zjXuslzQcWgGr4ucN6NQru8YE1DmAVJwGGl/tOwKk6rvT060qStPG2a5y396
CLXQFDLDUrSOA4qsW3WF+k3HHKnWCyOwm9x3WwTUbjMt5duWXpUkcg2hU+2V5zLB
gm3FoN1JxGxgrnQDB81OWhSw2GSVKULIGEG5UsPRBe0fzi2vLsuewgRmqqDNMLVO
egNrDj0xlWw1Rdh5jm4Oq4o6p+COjQULAXrIQDSIpf2psNPDCWVVSu4zWAy63rdt
5Mv7ksjvyEXadCnAclpO7xFt+idorUDpEYSgVQIDyDt1bnXs/OU2KEW/BEgGeDib
awTD9JeupZ13Ofi/ZHnJCi2aduAzZG/eVC3doP+/46hbb+oMxWpm/d8CAwEAAQ==
""".replace("\n", '').replace(' ', '')

cc = base64.b64decode(data_pub.encode()).hex()

# print(cc)

# print("\n")
cc = base64.b64decode(data.encode()).hex()

# print(cc)

data_hex = """61913bc6bd1b13de093b872aae2b50704f9d27858e99fe07be685
a484972c1ca7dc4df3106e70de439f1957b7c3046e399eeee754351bd30d81dd164
bf6e8fd4ae1785eb3c76e469401112fd3c4de180f8dad7763fc3c24a12e7bd0e492
d6b987029d841af706c41fcccbf65c652677b9fb455cd4177b5fb3843514f1047a5
8260dbc9bf703794b3c28752f9727861caa891a3cc800edca5e3bd0ce3d185a2fcc
18a08195e7a8573d1444a47ba0fec6c63d111760f2a662dff2bdb7ef8b884b24472
ca1507d6f539cefe3f0bec35a6e7974e709399af591b0efc4f02edb32d028201010
0c0cfc776f9bcad7e90e82f00b582c0ffe26f5acc4bc465b89cbf3c76097ad51556
3f3e0f67358f350c1b7d6a216b2e7adbe71c4f114cd2b971b83a070e1ec0e17e395
b4f8c0496dd6134a857316cd6bd5b8e83e9c019ec2f5a4d0240b9ce5a10154926be
9cc10fa0da2d7d223a166daac89c8723c6132547d1162fd8bdd43d80217667986ec
6dce91ba1bdaf6d55450c73e9c5c8a7f9d4eb38bc2f0c6139f261926aa3fe68011e
f0b7af34e9996c4d0a3095b48f9f585882d4a46bf44afa00672b21619a2862fc9cb
48093604ffa7f15bd43697eac8e74e93dbc5f1d75fd8f61310b7b87d7fd729c5d6d
a4b069d8037dfeb6dcd8dd8db4e2375b8a095f692b510282010051c69153116a1f1
c9664ec0e9e68bec093342d2645aa465ca8afb61dd7039075a8aa0dd3b6d006d649
b9db97c9ac8861b03e6db921416a6b6d7850b0bceecad6341770e75fd6d17699886
ce68eb72d7c7c19995510df53aea435af7b806eb410483adf6c1274eafa93220bdd
e73e9ac6fc4f2e04bc85d8a5ff73c58805afd6a44fe6982de5be0b5b3c2d8df65ac
d79a1cce103de46b7dc8f9daac71298228e795d41a93121a3114687893a9265ae50
251dbab3943c39c795b2ae5f5040cf6f11c4869d085155476ab0c1936082d222feb
d0b28f364108e6d326c9d7fa68b0f35f0c79581eeaa1480ad5a11a44d78af533e14
85ced12d3941f97644757c05d7c5028201010094162ecbbf7f9d1cc263d21e07c8b
db7acbeb2c995c4f448cc775131a033fdd5a2529d26d2f464befd1a383ac8beaf0e
62c6bcaa057467f6d3020ed275350b98f8c8945c512c96db7d3785c063458d9bfd5
a506b2e20205d61b2a1dc30fdeccf8566acd4aa5235a7515bdcda4a85ab5f63b620
b7667ac3bec1f8e322f13eab22978b38bc51e6910998209fa2333c8154463056fb2
0773d1e9d57949a5e3e1d4ec96405cb069ab89067604b08cf6036d9c329e1fad8fe
e9d9c5e5912bcdab37877e8d2626c9ff4d097c0af665eeabfa578e56815ea201ebe
9f7b300c51905fbdf688f046bbd8836e1b10eaf76844102da9c1e60932c1d9da978
6b9ef51230c512
"""

dp = int("""c0cfc776f9bcad7e90e82f00b582c0ffe26f5acc4bc465b89cbf3c76097ad51556
3f3e0f67358f350c1b7d6a216b2e7adbe71c4f114cd2b971b83a070e1ec0e17e395
b4f8c0496dd6134a857316cd6bd5b8e83e9c019ec2f5a4d0240b9ce5a10154926be
9cc10fa0da2d7d223a166daac89c8723c6132547d1162fd8bdd43d80217667986ec
6dce91ba1bdaf6d55450c73e9c5c8a7f9d4eb38bc2f0c6139f261926aa3fe68011e
f0b7af34e9996c4d0a3095b48f9f585882d4a46bf44afa00672b21619a2862fc9cb
48093604ffa7f15bd43697eac8e74e93dbc5f1d75fd8f61310b7b87d7fd729c5d6d
a4b069d8037dfeb6dcd8dd8db4e2375b8a095f692b51""".replace("\n", '').replace(' ', ''), 16)

dq = int("""51c69153116a1f1
c9664ec0e9e68bec093342d2645aa465ca8afb61dd7039075a8aa0dd3b6d006d649
b9db97c9ac8861b03e6db921416a6b6d7850b0bceecad6341770e75fd6d17699886
ce68eb72d7c7c19995510df53aea435af7b806eb410483adf6c1274eafa93220bdd
e73e9ac6fc4f2e04bc85d8a5ff73c58805afd6a44fe6982de5be0b5b3c2d8df65ac
d79a1cce103de46b7dc8f9daac71298228e795d41a93121a3114687893a9265ae50
251dbab3943c39c795b2ae5f5040cf6f11c4869d085155476ab0c1936082d222feb
d0b28f364108e6d326c9d7fa68b0f35f0c79581eeaa1480ad5a11a44d78af533e14
85ced12d3941f97644757c05d7c5
""".replace("\n", '').replace(' ', ''), 16)

pinvq = int("""94162ecbbf7f9d1cc263d21e07c8b
db7acbeb2c995c4f448cc775131a033fdd5a2529d26d2f464befd1a383ac8beaf0e
62c6bcaa057467f6d3020ed275350b98f8c8945c512c96db7d3785c063458d9bfd5
a506b2e20205d61b2a1dc30fdeccf8566acd4aa5235a7515bdcda4a85ab5f63b620
b7667ac3bec1f8e322f13eab22978b38bc51e6910998209fa2333c8154463056fb2
0773d1e9d57949a5e3e1d4ec96405cb069ab89067604b08cf6036d9c329e1fad8fe
e9d9c5e5912bcdab37877e8d2626c9ff4d097c0af665eeabfa578e56815ea201ebe
9f7b300c51905fbdf688f046bbd8836e1b10eaf76844102da9c1e60932c1d9da978
6b9ef51230c512""".replace("\n", '').replace(' ', ''), 16)

q_low = int("""61913bc6bd1b13de093b872aae2b50704f9d27858e99fe07be685
a484972c1ca7dc4df3106e70de439f1957b7c3046e399eeee754351bd30d81dd164
bf6e8fd4ae1785eb3c76e469401112fd3c4de180f8dad7763fc3c24a12e7bd0e492
d6b987029d841af706c41fcccbf65c652677b9fb455cd4177b5fb3843514f1047a5
8260dbc9bf703794b3c28752f9727861caa891a3cc800edca5e3bd0ce3d185a2fcc
18a08195e7a8573d1444a47ba0fec6c63d111760f2a662dff2bdb7ef8b884b24472
ca1507d6f539cefe3f0bec35a6e7974e709399af591b0efc4f02edb32d""".replace("\n", '').replace(' ', ''), 16)

data_pub = """3082020a0282020100
bfa246a891be9d2e53bcf3d92d7052ae0332dbbc2732e489764e25485
73ce26defbd15f1f65b4447b50e40dda22f8db64a9de431832f4488df
94dbc0cea7dc815b8cc0835d54efb56db85e76f16a79029c3037c4940f
960f050b2c8770859ba6caaa0f8ef45f7727eff087303c4062fc0b611
8acdfc1a4e51224a76cd00cfa718626deca8447e890eb84436bd2b64e
b3b981f3ff8b20533b274f0f464d2dbbec3cc364e98cee343fa98d11b0
b47f6fc55e60d07d4f6a4d64fad5eb7144a0a609cd909e46a6d9b90a00
b4a85e72c51ffe0cccbf74e01cee352121931e5f5b164ddf6b4d2b9030
007fc377ce35eeb25cd0716806af8b9c37a350aeef181350e6015270186
97fb4ec0a93aaef4f4eb4a92b4f1b66b9cb7f7a08b5d01432c352b48e03
8aac5b7585fa4dc71ca9d60b23b09bdc775b04d46e332de5db965e9524
720da153ed95e732c1826dc5a0dd49c46c60ae740307cd4e5a14b0d86495
2942c81841b952c3d105ed1fce2daf2ecb9ec20466aaa0cd30b54e7a036b
0e3d31956c3545d8798e6e0eab8a3aa7e08e8d050b017ac8403488a5fda9b
0d3c30965554aee33580cbadeb76de4cbfb92c8efc845da7429c0725a4ee
f116dfa2768ad40e91184a0550203c83b756e75ecfce5362845bf0448067
8389b6b04c3f497aea59d7739f8bf6479c90a2d9a76e033646fde542ddda
0ffbfe3a85b6fea0cc56a66fddf0203010001"""

n = int("""bfa246a891be9d2e53bcf3d92d7052ae0332dbbc2732e489764e25485
73ce26defbd15f1f65b4447b50e40dda22f8db64a9de431832f4488df
94dbc0cea7dc815b8cc0835d54efb56db85e76f16a79029c3037c4940f
960f050b2c8770859ba6caaa0f8ef45f7727eff087303c4062fc0b611
8acdfc1a4e51224a76cd00cfa718626deca8447e890eb84436bd2b64e
b3b981f3ff8b20533b274f0f464d2dbbec3cc364e98cee343fa98d11b0
b47f6fc55e60d07d4f6a4d64fad5eb7144a0a609cd909e46a6d9b90a00
b4a85e72c51ffe0cccbf74e01cee352121931e5f5b164ddf6b4d2b9030
007fc377ce35eeb25cd0716806af8b9c37a350aeef181350e6015270186
97fb4ec0a93aaef4f4eb4a92b4f1b66b9cb7f7a08b5d01432c352b48e03
8aac5b7585fa4dc71ca9d60b23b09bdc775b04d46e332de5db965e9524
720da153ed95e732c1826dc5a0dd49c46c60ae740307cd4e5a14b0d86495
2942c81841b952c3d105ed1fce2daf2ecb9ec20466aaa0cd30b54e7a036b
0e3d31956c3545d8798e6e0eab8a3aa7e08e8d050b017ac8403488a5fda9b
0d3c30965554aee33580cbadeb76de4cbfb92c8efc845da7429c0725a4ee
f116dfa2768ad40e91184a0550203c83b756e75ecfce5362845bf0448067
8389b6b04c3f497aea59d7739f8bf6479c90a2d9a76e033646fde542ddda
0ffbfe3a85b6fea0cc56a66fddf""".replace('\n', ''), 16)

'''
dp == d (mod p-1)
dq == d (mod p-1)

'''

e = 65537

for i in range(1, 100000):
    pp = (e * dp - 1) // i + 1
    if n % pp == 0:
        p = pp
        q = n // pp
        e = 65537
        d = inverse(e, (p-1) * (q-1))
        key = RSA.construct((n, e, d, p, q))
        f = open('result.pem', 'wb')
        f.write(key.export_key('PEM'))
        f.close()
